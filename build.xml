<?xml version="1.0" encoding="UTF-8"?>

<project name="simulator" basedir="." default="build">

	<!-- ################################### Definitions ################################### -->
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>

	<property name="build.dir"  value="tmp/ant"/>
	<property name="lib.dir" value="lib"/>
	<property name="src.dir" value="src/main"/>
	<property name="test.dir" value="src/test"/>
	<property name="resources.dir" value="resources"/>
	<property name="dist.dir" value="jar"/>
	<property name="javadoc.dir" value="javadoc"/>
	<property name="deploy.dir" value="deploy"/>

	<fileset id="external.jars" dir="${lib.dir}">
        <include name="xstream/xstream-1.3.jar"/>
        <include name="xstream/xpp3_min-1.1.4c.jar"/>
        <include name="commons-logging/commons-logging-1.1.1.jar"/>
        <include name="log4j/log4j-1.2.15.jar"/>
        <include name="commons-cli/commons-cli-1.1.jar"/>
	</fileset>

	<fileset id="test.jars" dir="${lib.dir}">
        <include name="xstream/xstream-1.3.jar"/>
        <include name="xstream/xpp3_min-1.1.4c.jar"/>
		<include name="log4j/log4j-1.2.15.jar"/>
		<include name="commons-cli/commons-cli-1.1.jar"/>
		<include name="junit/junit.jar"/>
   	</fileset>

	<path id="test.classpath">
		<pathelement path="${build.dir}\test"/>
		<fileset refid="test.jars"/>
	</path>
	
	<path id="simulator.classpath">
		<pathelement path="${build.dir}"/>
		<fileset refid="external.jars"/>
	</path>
	
	<!-- ################################### Misc Targets ################################### -->

    <target name="all" depends="cleanall,build,deploy,doc,test" 
	        description="Cleanly build, package and test everything (does not update database)"/>

    <target name="clean" description="Clean up build directories">
        <delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
    </target>

    <target name="cleanall" depends="clean">
		<delete dir="${javadoc.dir}"/>
		<delete dir="${deploy.dir}"/>
	</target>
 
	<target name="build" depends="build-subprojects,set-svn-revision,filter-tpl,build-project"/>
    
	<target name="build-subprojects"/>
     
    <target name="init">
		<tstamp/>
        <mkdir dir="${build.dir}"/>
        <copy includeemptydirs="false" todir="${build.dir}">
            <fileset dir="${src.dir}" excludes="**/*.launch, **/*.java, **/*.tpl"/>
        </copy>
    </target>

	<target name="build-project" depends="init" description="Building project">
        <echo message="OS: ${os.name} "/>
        <echo message="Java: ${java.version} "/>
        <echo message="Ant Java: ${ant.java.version} "/>
        <echo message="${ant.project.name}: ${ant.file} "/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" failonerror="true">
            <classpath refid="simulator.classpath"/>
        </javac>
    </target>
		
	<target name="package" depends="build-project" description="Create JAR file">
		<mkdir dir="${dist.dir}"/>
		<jar jarfile="${dist.dir}/simulator.jar" compress="false">
			<fileset dir="${build.dir}">
				<include name="com/**"/>
			</fileset>
		</jar>
	</target>
	
	<target name="deploy" depends="build,package,createPaths" description="Deploying the package">
		<mkdir dir="${deploy.dir}"/>
		<property name="deploy-dest" value="Plectix-Simulator-${DSTAMP}"/>
		<property name="deploy-zip.dir" value="${deploy.dir}/${deploy-dest}"/>
		<delete dir="${deploy-zip.dir}"/>
		<copy todir="${deploy-zip.dir}">
			<fileset dir=".">				
				<include name="config/log4j.properties"/>
				<include name="${dist.dir}/simulator.jar"/>
				<exclude name="**/.svn"/>
			</fileset>
		</copy>
		<copy todir="${deploy-zip.dir}/${lib.dir}">
			<fileset refid="external.jars"/>
		</copy>
		
		<copy todir="${deploy-zip.dir}" file="run/Simulator.bat"/>
		<copy todir="${deploy-zip.dir}" file="run/Simulator.sh"/>
		<replaceregexp>
			<regexp pattern="\$\{export.classpath.unix}"/>
			<substitution expression="${export.classpath.unix}"/>
			<fileset dir="${deploy-zip.dir}" includes="*.sh"/>
		</replaceregexp>		
		<replaceregexp>
			<regexp pattern="\$\{export.classpath.windows}"/>
			<substitution expression="${export.classpath.windows}"/>
			<fileset dir="${deploy-zip.dir}" includes="*.bat,*.lap"/>
		</replaceregexp>
		<fixcrlf srcdir="${deploy-zip.dir}" eol="lf" eof="remove" includes="*.sh"/>

		<mkdir dir="${deploy-zip.dir}/logs"/>
		<touch file="${deploy-zip.dir}/logs/simulator.log"/>
		
		<!-- Make Windows zip file, including JRE -->
		<zip destfile="${deploy.dir}/${deploy-dest}.zip">
			<zipfileset dir="${deploy-zip.dir}" includes="**" prefix="${deploy-dest}"/>
		</zip>
	</target>

	<target name="SimulationMain">
        <java classname="com.plectix.simulator.SimulationMain" failonerror="true" fork="yes">
            <arg line="--sim data/Example.ka --time 10"/>
            <classpath refid="simulator.classpath"/>
        </java>
    </target>
		
	<target name="createPaths">
		
		<!-- Define properties for the full paths to the lib and jar directories,
		     so we can replace them below with the relative paths -->
		<property name="lib-location" location="lib"/>
		<property name="jar-location" location="jar"/>
	
		<path id="export.classpath">
			<pathelement path="${dist.dir}/simulator.jar"/>
			<fileset refid="external.jars"/>
		</path>
		<pathconvert refid="export.classpath" targetos="unix" property="export.classpath.unix">
			<map from="${lib-location}" to="lib"/>
			<map from="${jar-location}" to="jar"/>
		</pathconvert>
		<pathconvert refid="export.classpath" pathsep=";" dirsep="/" property="export.classpath.windows">
			<map from="${lib-location}" to="lib"/>
			<map from="${jar-location}" to="jar"/>
		</pathconvert>
	</target>
		
	<target name="showPaths" depends="createPaths">
		<echo message="The value of export.classpath.windows is ${export.classpath.windows}"/>
		<echo message="The value of export.classpath.unix is ${export.classpath.unix}"/>
	</target>


   <!-- for xpath task below -->
    <taskdef resource="net/uworks/andariel/andariel.properties">
        <classpath>
                <pathelement location="${lib.dir}/ant/andariel-1.2.3.jar"/>
	    </classpath>
	</taskdef>

  <!-- Set version -->
    <target name="set-svn-revision">
		<echo message="${lib.dir}/ant/andariel-1.2.3.jar"/>
	    <property name="svn.info" value="svn.info" />

        <!-- Get last SVN revision. -->
        <exec executable="svn" output="${svn.info}">
             <arg value="info" />
             <arg value="--xml" />
        </exec>

        <!-- Query revision. -->
        <xpath file="${svn.info}"
             expression="//entry/@revision"
             outputproperty="build.svn.revision" />

        <!-- Delete temp revision file. -->
        <delete file="${svn.info}" />

		<!-- Show version -->
		<echo message="SVN Revision ${build.svn.revision}" />
    </target>

    <target name="filter-tpl">
        <echo message="Processing the templates. ${ant.build.javac.source}" />
	    <tstamp>
	          <format property="build.date" pattern="yyyy-MM-dd HH:mm:ss z" />
		</tstamp>
        <copy todir="${src.dir}" overwrite="true" verbose="true">
            <fileset dir="${src.dir}">
                <include name="**/*.tpl" />
            </fileset>
            <filterset>
	            <filter token="build.svn.revision" value="${build.svn.revision}" />
	            <filter token="build.date" value="${build.date}" />
	            <filter token="build.os.name" value="${os.name}" />
	            <filter token="java.version" value="${java.version}" />
	            <filter token="ant.java.version" value="${ant.java.version}" />
            </filterset>
            <globmapper from="*.tpl" to="*.java" />
        </copy>
    </target>

	
	<!-- ################################### Javadoc Targets ################################### -->
	
	<target name="doc" description="Create all Javadoc documentation">
		<mkdir dir="${javadoc.dir}"/>
		<javadoc destdir="${javadoc.dir}" windowtitle="Plectix Simulator" source="1.6" author="true" version="true" use="true">
			<doctitle><![CDATA[<h1>Plectix Simulator</h1>]]></doctitle>
			<bottom><![CDATA[<i>(c) 2008 Plectix BioSystems Inc.</i>]]></bottom>
			<classpath refid="simulator.classpath"/>
		    <group title="All Packages" packages="com.plectix.simulator*"/>
		    <packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="com/plectix/simulator/**"/>
		    </packageset>
		</javadoc>
	</target>
	
	<!-- ################################### Test Targets ################################### -->
	
	<target name="build-tests" depends="init" description="Building tests">
		<mkdir dir="${build.dir}/test"/>
	    <echo message="OS: ${os.name} "/>
        <echo message="Java: ${java.version} "/>
        <echo message="Ant Java: ${ant.java.version} "/>
	    <echo message="${ant.project.name}: ${ant.file} "/>
		<javac srcdir="${test.dir};${src.dir}" destdir="${build.dir}\test" debug="true" failonerror="true">
			<classpath refid="test.classpath"/>
		</javac>
	</target>
	
	<target name="test" description="Run JUnit tests" depends="build-tests">
		<echo>Running JUnit Tests</echo>
		<junit printsummary="yes" fork="yes" haltonfailure="yes" showoutput="no">
			<classpath refid="test.classpath" />
	       	<formatter type="plain"/>
			<test name="com.plectix.simulator.RunAllTests"/>
		</junit>
		<echo message="Tests complete - check log for errors"/>
	</target>
</project>
